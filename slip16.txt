set A

HTML:
<label for="bookSelect">Select a book:</label>
<select id="bookSelect"></select>
<br>
<label for="titleOutput">Title:</label>
<span id="titleOutput"></span>
<br>
<label for="authorOutput">Author:</label>
<span id="authorOutput"></span>
<br>
<label for="yearOutput">Year:</label>
<span id="yearOutput"></span>
<br>
<label for="priceOutput">Price:</label>
<span id="priceOutput"></span>

JavaScript:
// get the book select element and the output spans
const bookSelect = document.getElementById('bookSelect');
const titleOutput = document.getElementById('titleOutput');
const authorOutput = document.getElementById('authorOutput');
const yearOutput = document.getElementById('yearOutput');
const priceOutput = document.getElementById('priceOutput');

// create an XMLHttpRequest object
const xhr = new XMLHttpRequest();

// define a function to handle the XMLHttpRequest response
xhr.onreadystatechange = function() {
  if (this.readyState === 4 && this.status === 200) {
    // parse the XML response
    const xmlDoc = this.responseXML;
    
    // get the book elements from the XML
    const books = xmlDoc.getElementsByTagName('book');

    // iterate through the book elements and add options to the select element
    for (let i = 0; i < books.length; i++) {
      const title = books[i].getElementsByTagName('title')[0].childNodes[0].nodeValue;
      const option = document.createElement('option');
      option.textContent = title;
      bookSelect.appendChild(option);
    }

    // add an event listener to the select element
    bookSelect.addEventListener('change', function() {
      // get the selected book
      const selectedBook = books[bookSelect.selectedIndex];

      // get the book details from the XML and display them
      titleOutput.textContent = selectedBook.getElementsByTagName('title')[0].childNodes[0].nodeValue;
      authorOutput.textContent = selectedBook.getElementsByTagName('author')[0].childNodes[0].nodeValue;
      yearOutput.textContent = selectedBook.getElementsByTagName('year')[0].childNodes[0].nodeValue;
      priceOutput.textContent = selectedBook.getElementsByTagName('price')[0].childNodes[0].nodeValue;
    });
  }
};

// open and send the XMLHttpRequest
xhr.open('GET', 'books.xml', true);
xhr.send();


XML:
<?xml version="1.0" encoding="UTF-8"?>
<library>
  <book>
    <title>The Great Gatsby</title>
    <author>F. Scott Fitzgerald</author>
    <year>1925</year>
    <price>12.99</price>
  </book>
  <book>
    <title>To Kill a Mockingbird</title>
    <author>Harper Lee</author>
    <year>1960</year>
    <price>9.99</price>
  </book>
  <book>
    <title>1984</title>
    <author>George Orwell</author>
    <year>1949</year>
    <price>8.99</price>
  </book>
</library>

import re
import nltk
from nltk.tokenize import sent_tokenize, word_tokenize
from nltk.corpus import stopwords
from heapq import nlargest

# Example text paragraph
text = "Natural language processing (NLP) is a subfield of linguistics, computer science, information engineering, and artificial intelligence concerned with the interactions between computers and human (natural) languages. As such, NLP is related to the area of humanâ€“computer interaction. Many challenges in NLP involve natural language understanding, that is, enabling computers to derive meaning from human or natural language input. The history of NLP generally starts in the 1950s, although work can be found from earlier periods. In 1950, Alan Turing published an article titled 'Computing Machinery and Intelligence' which proposed what is now called the Turing test as a criterion of intelligence."

# Preprocess the text to remove special characters and digits
text = re.sub('[^a-zA-Z]', ' ', text)
text = re.sub(r'\s+', ' ', text)

# Tokenize the text into sentences
sentences = sent_tokenize(text)

# Tokenize each sentence into words and remove stop words
stop_words = set(stopwords.words('english'))
words = [word_tokenize(sentence.lower()) for sentence in sentences]
words = [[word for word in sentence if word not in stop_words] for sentence in words]

# Calculate the frequency of each word
word_freq = {}
for sentence in words:
    for word in sentence:
        if word not in word_freq:
            word_freq[word] = 1
        else:
            word_freq[word] += 1

# Calculate the score of each sentence based on the frequency of its words
sentence_scores = {}
for i, sentence in enumerate(words):
    sentence_scores[i] = 0
    for word in sentence:
        if word in word_freq:
            sentence_scores[i] += word_freq[word]

# Get the top 3 sentences with highest scores to generate the summary
summary_sentences = nlargest(3, sentence_scores, key=sentence_scores.get)
summary = ' '.join([sentences[i] for i in summary_sentences])

print(summary)


