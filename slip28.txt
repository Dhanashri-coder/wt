

index.html:
php-:

<!DOCTYPE html>
<html>
<head>
	<title>Login Form</title>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script>
		$(document).ready(function(){
			$("#login-form").submit(function(event){
				event.preventDefault();
				var username = $("#username").val();
				var password = $("#password").val();
				$.ajax({
					url: "check_login.php",
					type: "POST",
					data: { username: username, password: password },
					success: function(response){
						if(response == "success"){
							window.location.href = "dashboard.php";
						}
						else{
							$("#error").html("Invalid username or password");
						}
					}
				});
			});
		});
	</script>
</head>
<body>
	<h2>Login Form</h2>
	<form id="login-form" method="POST">
		<label for="username">Username:</label>
		<input type="text" id="username" name="username"><br><br>
		<label for="password">Password:</label>
		<input type="password" id="password" name="password"><br><br>
		<input type="submit" value="Submit">
	</form>
	<div id="error"></div>
</body>
</html>


check_login.php:

<?php
require_once("db_connect.php");

if($_SERVER["REQUEST_METHOD"] == "POST"){
	$username = $_POST["username"];
	$password = $_POST["password"];

	$sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
	$result = mysqli_query($conn, $sql);

	if(mysqli_num_rows($result) == 1){
		echo "success";
	}
	else{
		echo "failure";
	}
}

mysqli_close($conn);
?>


db_connect.php:

<?php

if(!$conn){
	die("Connection failed: " . mysqli_connect_error());
}
?>


setb

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# Load the dataset into a pandas dataframe
df = pd.read_csv('car_dataset.csv')

# Print the first five rows of the dataframe
print(df.head())

# Identify the independent and dependent variables
X = df[['horsepower']]
y = df['price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Create a linear regression model and fit it to the training data
regressor = LinearRegression()
regressor.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = regressor.predict(X_test)

# Calculate the R-squared value
r_squared = regressor.score(X_test, y_test)

print('R-squared value:', r_squared)




